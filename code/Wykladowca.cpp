//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : Wykladowca.cpp
//  @ Date : 19.05.2025
//  @ Author : overstimulation
//
//

#include "Wykladowca.h"
#include "Kurs.h"
#include "Wydzial.h"
#include "Uczelnia.h"
#include <limits>

string Wykladowca::getTytulNaukowy()
{
    return tytulNaukowy;
}

string Wykladowca::getSpecjalizacja()
{
    return specjalizacja;
}

Wydzial *Wykladowca::getWydzial()
{
    return User::getWydzial();
}

void Wykladowca::stworzKurs()
{
    Wydzial *mojWydzial = this->getWydzial();

    string menuName = "Panel tworzenia kursu";
    string line(menuName.length() + 2, '=');
    cout << line << "\n"
         << menuName << "\n"
         << line << "\n";

    string nazwa;
    bool kursIstnieje = false;
    do
    {
        cout << "Podaj nazwe kursu: ";
        cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
        getline(cin, nazwa);
        kursIstnieje = false;
        for (Kurs *kurs : mojWydzial->getKursy())
        {
            if (kurs->getNazwa() == nazwa)
            {
                kursIstnieje = true;
                cout << "Kurs o nazwie '" << nazwa << "' juz istnieje. Podaj inna nazwe.\n";
                break;
            }
        }
    } while (kursIstnieje);
    Kurs *nowyKurs = new Kurs(nazwa, this);
    mojWydzial->dodajKurs(nowyKurs);
    cout << "Kurs '" << nazwa << "' zostal dodany do bazy aktywnych kursow." << endl;
	cout << "Nacisnij Enter, aby kontynuowac...";
    cin.get();
    return;
}

Wykladowca::Wykladowca(string imie, string nazwisko, Wydzial *wydzial, string tytul, string specjalizacja)
    : User(imie, nazwisko, wydzial, "wykladowca"), tytulNaukowy(tytul), specjalizacja(specjalizacja)
{
    wydzial->dodajWykladowce(this);
    wydzial->getUczelnia()->dodajWykladowce(this);
}
